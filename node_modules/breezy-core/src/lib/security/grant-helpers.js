'use strict'

const {PERMISSION, ACCESS} = require('../../../data/security-config')
const {AccessManager, SCOPE_ALL} = require('../../security/access-manager')

module.exports = {
  buildCompanyGrants: buildCompanyGrants,
  buildPositionGrants: buildPositionGrants
}

/**
 * creates the company level grants construct
 * @param {AccessManager} security
 * @returns {object}
 */
function buildCompanyGrants(security) {

  let grants = {}
  grants.model = security.export()

  grants[PERMISSION.SMS_EMAIL_ACCESS] = security.userCan(PERMISSION.SMS_EMAIL_ACCESS, {
    create: true,
    read: true
  }, SCOPE_ALL)
  grants[PERMISSION.REPORT_ACCESS] = security.userCan(PERMISSION.REPORT_ACCESS, {
    read: true
  }, SCOPE_ALL)
  grants[PERMISSION.ADMIN_ACCESS] = security.userCan(PERMISSION.ADMIN_ACCESS, {
    read: true,
    update: true
  })
  grants[PERMISSION.TALENT_SEARCH_ACCESS] = security.userCan(PERMISSION.TALENT_SEARCH_ACCESS, {
    read: true
  })
  grants[PERMISSION.TALENT_SEARCH_ACCESS] = security.userCan(PERMISSION.TALENT_SEARCH_ACCESS, {
    read: true
  })
  grants.company_settings = (security.userCan(PERMISSION.COMPANY_NAME_ACCESS, ACCESS.UPDATE) ||
    security.userCan(PERMISSION.COMPANY_NAME_ACCESS, ACCESS.UPDATE) ||
    security.userCan(PERMISSION.POSITION_ACCESS, ACCESS.UPDATE) ||
    security.userCan(PERMISSION.USER_ACCESS, ACCESS.READ) ||
    security.userCan(PERMISSION.USER_AUTO_JOIN_ACCESS, ACCESS.READ) ||
    security.userCan(PERMISSION.TEAM_ACCESS, ACCESS.READ) ||
    security.userCan(PERMISSION.APPROVAL_ACCESS, ACCESS.READ) ||
    security.userCan(PERMISSION.SSO_ACCESS, ACCESS.READ))

  grants.recruiting_preferences = (security.userCan(PERMISSION.INTERVIEW_GUIDE_ACCESS, ACCESS.READ) ||
    security.userCan(PERMISSION.QUESTIONNAIRE_ACCESS, ACCESS.READ) ||
    security.userCan(PERMISSION.SCORECARD_ACCESS, ACCESS.READ) ||
    security.userCan(PERMISSION.TAG_ACCESS, ACCESS.READ) ||
    security.userCan(PERMISSION.SCHED_LINKS_ACCESS, ACCESS.READ) ||
    security.userCan(PERMISSION.PIPELINE_ACCESS, ACCESS.READ) ||
    security.userCan(PERMISSION.TEMPLATE_ACCESS, ACCESS.READ) ||
    security.userCan(PERMISSION.OFFER_TEMPLATE_ACCESS, ACCESS.READ) ||
    security.userCan(PERMISSION.CUSTOM_FLD_ACCESS, ACCESS.READ) ||
    security.userCan(PERMISSION.CAMPAIGN_ACCESS, ACCESS.READ))

  return grants
}

/**
 * creates the position level grants construct
 * @param {AccessManager} security
 * @param {string} positionId
 * @returns {object}
 */
function buildPositionGrants(security, positionId) {
  let grants = {}
  grants[PERMISSION.POSITION_ACCESS] = security.userCan(PERMISSION.POSITION_ACCESS, ACCESS.UPDATE, positionId)
  grants[PERMISSION.TEAM_ACCESS] = security.userCan(PERMISSION.TEAM_ACCESS, ACCESS.UPDATE, positionId)
  grants[PERMISSION.DETAIL_ACCESS] = (security.userCan(PERMISSION.CANDIDATE_SOURCE_ACCESS, ACCESS.READ, positionId) ||
    security.userCan(PERMISSION.CUSTOM_FLD_ACCESS, ACCESS.READ, positionId) ||
    security.userCan(PERMISSION.CANDIDATE_CONTACT_ACCESS, ACCESS.READ, positionId) ||
    security.userCan(PERMISSION.GDPR_REQUEST_CONSENT_ACCESS, ACCESS.READ, positionId) ||
    security.userCan(PERMISSION.GDPR_DATA_REQUEST_ACCESS, ACCESS.READ, positionId))
  return grants
}
