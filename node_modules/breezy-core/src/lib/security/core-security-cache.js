'use strict'

const helpers = require('../../util/helpers')
const USER_SECURITY_CACHE_KEY = 'BREEZY_USER_SECURITY_'

module.exports = {
  cacheUserSecurity,
  getUserSecurityFromCache,
  invalidateCache
}

/**
 * Caches a user's company security model
 * @param security
 */
function cacheUserSecurity(security) {

  if (security.userId && security.companyId) {
    helpers.cache.chooseCache(security.companyId).set(USER_SECURITY_CACHE_KEY + security.companyId + '_' + security.userId, JSON.stringify(security), 86400, function (error, value) {
    })
  }
}

/**
 * Get's a user's company security model from cache
 * @param companyId
 * @param userId
 * @returns {Promise<any>}
 */
async function getUserSecurityFromCache(companyId, userId) {

  let security = await helpers.cache.chooseCache(companyId).getAsync(USER_SECURITY_CACHE_KEY + companyId + '_' + userId)
  if (security) {
    return JSON.parse(security)
  }
}

/**
 * Invalidate a security cache
 * @param companyId
 * @param userId
 */
function invalidateCache(companyId, userId) {
  helpers.cache.chooseCache(companyId).delete(USER_SECURITY_CACHE_KEY + companyId + '_' + userId, function (error, value) {
  })
}