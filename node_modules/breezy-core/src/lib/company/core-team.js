'use strict'

const mongo = require('../../db/mongoClient')()
const memberClient = require('../company/core-member')
const COMPANY_TEAM_COLLECTION = 'company_team'
const ALL_MEMBERS = 'all_members'
const LOG_NS = '[CORE-TEAM]'

/**
 * Gets a team from the DB
 * @param criteria
 * @returns {Promise<*>}
 * @private
 */
async function _getTeam(criteria) {
  try {
    return mongo.getDocumentAsync({
      collection: COMPANY_TEAM_COLLECTION,
      criteria: criteria
    })
  } catch (e) {
    console.error(LOG_NS, e)
  }
}

/**
 * Gets a users teams ids within a company
 * @param companyId
 * @param userId
 * @returns {Promise<*>}
 */
async function getUserCompanyTeamIds(companyId, userId) {

  let teams = await getUserCompanyTeams(companyId, userId)
  if (!teams) teams = [];
  let teamIds = teams.map(t => t._id);
  teamIds.push(ALL_MEMBERS);
  return teamIds
}

/**
 * Gets a users teams ids within a company
 * @param companyId
 * @param userId
 * @returns {Promise<*>}
 */
async function getUserCompanyTeams(companyId, userId) {
  let criteria = {
    company_id: companyId,
    member_ids: {$in: [userId]}
  }
  let teams = await mongo.getDocumentsAsync({
    collection: COMPANY_TEAM_COLLECTION,
    criteria: criteria,
    limit: 100
  })
  return teams
}

/**
 * Look up a team by team and company ids
 * @param companyId
 * @param teamId
 * @returns {Promise<*>}
 */
async function getCompanyTeamById(companyId, teamId) {

  try {
    return await _getTeam({
      '_id': teamId,
      'company_id': companyId
    })
  } catch (e) {
    console.error(LOG_NS, e)
  }
}

async function getCompanyTeamMemberIds(companyId, teamId) {

  let ids = []

  if (teamId === ALL_MEMBERS) {
    let members = await memberClient.getMembersByCompanyId(companyId)
    if (members) {
      ids = members.map(m => m._id);
    }
  } else {
    let team = await _getTeam({
      '_id': teamId,
      'company_id': companyId
    })
    if (team && team.member_ids) {
      ids = team.member_ids
    }
  }
  return ids
}

async function getCompanyTeams(companyId) {
  let criteria = {
    company_id: companyId
  }
  return await mongo.getDocumentsAsync({
    collection: COMPANY_TEAM_COLLECTION,
    criteria: criteria,
    limit: 100
  })
}

module.exports = {
  getCompanyTeamById: getCompanyTeamById,
  getUserCompanyTeamIds,
  getUserCompanyTeams,
  getCompanyTeamMemberIds,
  getCompanyTeams,
  ALL_MEMBERS
}