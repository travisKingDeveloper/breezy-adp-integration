'use strict'

const mongo = require('../../db/mongoClient')()
const helpers = require('../../util/helpers')

const LOG_NS = '[CORE-USER]'
const CANDIDATE_CACHE_KEY = 'BREEZY_CANDIDATE_'
const CANDIDATE_COLLECTION = 'candidate'

module.exports = {
  getCandidateById: getCandidateById
}

/**
 * Get a user from by their id
 * @param candidateId
 * @returns {Promise<*>}
 */
async function getCandidateById(candidateId) {

  let cache = await getCandidateFromCache(candidateId)
  if (cache) {
    return cache
  }

  let candidate = await getCandidate({'_id': candidateId})

  if (candidate) {
    helpers.cache.chooseCache(null).set(CANDIDATE_CACHE_KEY + candidateId, JSON.stringify(candidate), 43200, function (error, value) {
    })
  }

  return candidate
}

/**
 * Gets a user from cache
 * @param candidateId
 * @returns {Promise<object>}
 */
async function getCandidateFromCache(candidateId) {

  let candidate = await helpers.cache.chooseCache(null).getAsync(CANDIDATE_CACHE_KEY + candidateId)
  if (candidate) {
    return JSON.parse(candidate)
  }
}

/**
 * Gets a user from the db
 * @param criteria
 * @returns {Promise<*>}
 */
async function getCandidate(criteria) {

  try {
    return mongo.getDocumentAsync({
      collection: CANDIDATE_COLLECTION,
      criteria: criteria
    })
  } catch (e) {
    console.error(LOG_NS, e)
  }
}
