class BreezyError extends Error {

  constructor(message) {

    super(message)

    this.name = this.constructor.name

    Error.captureStackTrace(this, this.constructor)
  }
}

class SecurityError extends BreezyError {

  constructor(message, permission) {
    super(message)

    this.permission = permission
  }
}

class MongoError extends BreezyError {

  constructor(message) {

    super(message)
  }
}

class ValidationError extends BreezyError {

  constructor(message, element, friendlyMessage) {

    super(message)

    this.element = element
    this.friendlyMessage = friendlyMessage
  }
}

class APIError extends BreezyError {

  constructor(message, status) {

    super(message)

    this.response = message
    this.status = status || 500
  }
}

module.exports = {
  BreezyError,
  SecurityError,
  MongoError,
  ValidationError,
  APIError
}