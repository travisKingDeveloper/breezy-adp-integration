'use strict'

const {context} = require('../../src/middleware/context-manager')
const helpers = require('../util/helpers')

const LOG_NS = '[AUTHZ]'

module.exports = {
  requireCompany,
  requireUser,
  isCompanyMember
}

async function _isValidUser() {

  try {
    let user = await context.user()
    if (user) return true
  } catch (e) {
    console.error(LOG_NS, e)
  }
  return false
}

async function _isValidCompany() {

  try {
    let user = await context.company()
    if (user) return true
  } catch (e) {
    console.error(LOG_NS, e)
  }
  return false
}

async function _hasRequiredUser(res) {

  if (await _isValidUser()) return true
  res.status(400).send({'error': 'Valid user is required'})
  return false
}

async function _hasRequiredCompany(res) {

  if (_isValidCompany()) return true
  res.status(400).send({'error': 'Valid company is required'})
  return false
}

async function requireUser(req, res, next) {

  if (await _hasRequiredUser(res)) {
    return next()
  }
}

async function requireCompany(req, res, next) {

  if (await _hasRequiredUser(res)) {
    if (await _hasRequiredCompany(res)) {
      next()
    }
  }
}

async function isCompanyMember(req, res, next) {
  try {
    let security = await context.security()
    if (security) {
      return next()
    }
  } catch (e) {
    console.error(LOG_NS, 'Error checking security context', e)
  }
  res.status(400).send('[authz] isCompanyMember: user is not a company member')
}