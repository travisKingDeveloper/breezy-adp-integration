'use strict'

const {SecurityMiddleware, ROLE_SCOPE} = require('../../src/middleware/security')
const {ACCESS, PERMISSION} = require('../../data/security-config')
const LOG_NS = '[CORE-ROUTE-SECURITY]'


/**
 * Creates a security middle ware object to verify permissions on a route
 * @param {string} permissionId
 * @param {number} [scope]
 * @param {object} [access]
 * @returns {Function}
 */
const secureRoute = (permissionId, scope = 0, access = null) => {
  
  let security = new SecurityMiddleware(permissionId, scope, access)

  return (req, res, next) => {

    switch (req.method) {
      case 'GET':
        return security.read(req, res, next)
      case 'POST':
        return security.create(req, res, next)
      case 'PUT':
        return security.update(req, res, next)
      case 'DELETE':
        return security.delete(req, res, next)
    }

    console.log(LOG_NS, req.method, req.originalUrl, 'requires security definition for permission', permissionId)
    return res.sendStatus(401)
  }
}

module.exports = {
  secureRoute,
  ROLE_SCOPE,
  PERMISSION,
  ACCESS
}
