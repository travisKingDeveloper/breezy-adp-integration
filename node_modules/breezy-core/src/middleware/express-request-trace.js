'use strict'

const cls = require('cls-hooked')
const uuid = require('uuidv4')

// generate a unique value for namespace
const nsid = `breezy_trace:${uuid()}`
const ns = cls.createNamespace(nsid)

const TRACE_HEADER_NAME = 'X-Trace-Id'

/**
 * Generates a request tracer middleware for Express.
 * @param {Object} options possible options
 * @param {boolean} options.useHeader respect request header flag
 *                                    (default: `false`)
 * @param {string} options.headerName request header name, used if `useHeader` is set to `true`
 *                                    (default: `X-Trace-Id`)
 */
const expressMiddleware = ({useHeader = false, headerName = TRACE_HEADER_NAME} = {}) => {
  return (req, res, next) => {
    ns.bindEmitter(req)
    ns.bindEmitter(res)

    let requestId
    if (useHeader) {
      requestId = req.headers[headerName.toLowerCase()]
    }
    requestId = requestId || getTraceId()

    ns.run(() => {
      ns.set('requestId', requestId)
      next()
    })
  }
}

function getTraceId() {
  return uuid().slice(-12)
}

/**
 * Returns request tracer id or `undefined` in case if the call is made from an outside CLS context.
 */
const id = () => ns.get('requestId')

module.exports = {
  expressMiddleware,
  id,
  TRACE_HEADER_NAME,
  getTraceId
}
