'use strict'

const {Permission} = require('./permission')

class Role {

  /**
   * Creates a Role
   * @param config
   * @param {Permission[]} permissions
   */
  constructor(config, permissions = []) {

    this._id = config._id
    this._name = config.name
    this._company_id = config.company_id || 'default'

    this._permissions = new Map()

    for (let perm of permissions) {
      this._permissions.set(perm.id(), perm)
    }
  }

  /**
   * Verify a roles access to functionality
   * @param id
   * @param requires
   * @returns {boolean|*}
   */
  can(id, requires = {}) {
    if (!this._permissions || this._permissions.size === 0) {
      console.error(`No Permissions defined for role ${this._name} ( ${this._id} )`)
      return false
    }
    if (!this._permissions.has(id)) {
      console.error(`Role ${this._name} ( ${this._id} ) does not define permission ${id}`)
      return false
    }

    let permission = this._permissions.get(id)
    return permission.validateAgainst(new Permission({_id: id}, requires))
  }

}

module.exports = {
  Role
}