'use strict'

const breezyConfig = require('../../data/config')
require('../../src/util/breezy-config').initConfig(breezyConfig)
const mongo = require('../../src/db/mongoClient')()
const {AccessManager, PERMISSION} = require('../../src/security/access-manager')
const {Permission} = require('../../src/security/permission')


async function main() {

  const permissionPosition = {
    _id: PERMISSION.ADMIN_POSITION_ACCESS,
    access: {
      create: false,
      read: true,
      update: true,
      remove: false
    }
  }

  const permissionCandidate = {
    _id: PERMISSION.CANDIDATE_ACCESS,
    access: {
      create: false,
      read: false,
      update: true,
      remove: true
    }
  }

  let security = {
    userId: '08cf60071ead',
    companyId: 'e16af8b6eb68',
    roles: ['company_admin', 'hiring_manager', 'company_member'],
    permissions: new Map()
  }

  security.permissions.set(permissionPosition._id, new Permission({_id: permissionPosition._id}, permissionPosition.access))
  security.permissions.set(permissionCandidate._id, new Permission({_id: permissionCandidate._id}, permissionCandidate.access))


  let start = new Date()

  let accessManager = new AccessManager(security)

  console.log('accessManager', accessManager)

  console.log('constructed... ', new Date() - start)

  let a = accessManager.userCan('something', {read: true})

  console.log('custom Access... ', a, new Date() - start)

  let b = accessManager.userCan(PERMISSION.POSITION_ACCESS, {read: true})

  console.log(PERMISSION.POSITION_ACCESS + ' Access... ', b, new Date() - start)

  let c = accessManager.userCan(PERMISSION.CANDIDATE_ACCESS, {read: true})

  console.log(PERMISSION.CANDIDATE_ACCESS + ' Access... ', c, new Date() - start)

}


main().then(() => {
  console.log('Done');
}).catch((e) => {
  console.error(e);
});
