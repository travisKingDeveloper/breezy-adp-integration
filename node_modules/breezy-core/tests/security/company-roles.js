'use strict'

const breezyConfig = require('../../data/config')
require('../../src/util/breezy-config').initConfig(breezyConfig)
const {migrateCompanyRoleMembers} = require('../../src/lib/company/core-member')
const {migratePositionRoleMembers} = require('../../src/lib/security/core-role-scope')
const roleClient = require('../../src/lib/security/core-role')
const roleScopeClient = require('../../src/lib/security/core-role-scope')


async function main() {

  let scopes = await roleScopeClient.getAllCompanyScopes('e16af8b6eb68')

  let audit = await roleScopeClient.createRoleScopeAudit('e16af8b6eb68', 'test', scopes)

  for (let scope of scopes) {
    scope.role = 'MAGIC'
  }

  await roleScopeClient.updateRoleScopeAudit(audit._id, 'final', scopes)

  //console.log(audit)

  // let role = {
  //   "_id": "6e76591b03ee",
  //   "name": "Member",
  //   "company_id": "e16af8b6eb68",
  //   "type": "position",
  //   "parent": {"_id": "position_member"},
  //   "immutable": false,
  //   "description": "",
  //   "permissions": [{"_id": "position", "access": {"update": true}}, {
  //     "_id": "resume",
  //     "access": {"read": true}
  //   }, {"_id": "experience", "access": {"read": true}}, {
  //     "_id": "task",
  //     "access": {"read": true, "update": true}
  //   }, {
  //     "_id": "discussionMessage",
  //     "access": {"create": true, "read": true, "update": true, "remove": true}
  //   }, {"_id": "notes", "access": {"create": true, "read": true, "update": true, "remove": true}}, {
  //     "_id": "selfTask",
  //     "access": {"create": true, "read": true, "update": true, "remove": true}
  //   }, {"_id": "candidate", "access": {"read": true}}, {
  //     "_id": "candidateScorecard",
  //     "access": {"read": true, "update": true, "remove": true}
  //   }, {"_id": "reminder", "access": {"create": true, "read": true, "remove": true}}]
  // }
  //
  // //await roleClient.createRole(role, 'e16af8b6eb68')
  // await roleClient.updateRole(role._id, role, 'e16af8b6eb68')


  //await migratePositionRoleMembers('e16af8b6eb68', 'position_member', 'c06ad458b79c')
}


setTimeout(main, 1500);