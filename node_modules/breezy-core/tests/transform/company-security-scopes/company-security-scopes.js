'use strict'

const breezyConfig = require('../../../data/config')
require('../../../src/util/breezy-config').initConfig(breezyConfig)
const mongo = require('../../../src/db/mongoClient')()
const helpers = require('../../../src/util/helpers')

const COMPANY_ID = 'e16af8b6eb68'


async function main() {

  let time
  let getTime
  let results

  let memberTeams = ['f9420bdc4df8', '04684df811d9']

  results = await getMemberPositions('c7ce8774ea5b', '64743619aa78', memberTeams)

  time = new Date()
  results = await getMemberPositions('c7ce8774ea5b', '64743619aa78', memberTeams)

  getTime = new Date() - time
  console.log('getMemberPositions', getTime, 'ms', '\n', results)

  time = new Date()
  results = await getCompanyPositionAndMembers('c7ce8774ea5b')

  getTime = new Date() - time
  console.log('getCompanyPositionAndMembers', getTime, 'ms', '\n', results)

  time = new Date()
  results = await getPositionMembers('e16af8b6eb68', 'e3ab1e61dd09')

  getTime = new Date() - time
  console.log('getPositionMembers', getTime, 'ms', '\n', results)
}

async function getMemberPositions(companyId, memberId, teams) {

  return await mongo.getDocumentsAsync({
    collection: 'company_security_scope',
    //criteria: {company_id: companyId, member_id: memberId}
    criteria: {company_id: companyId, '$or': [{'member_id': memberId}, {"team_id": {$in: teams}}]}
  })
}

//criteria:

async function getCompanyPositionAndMembers(companyId) {

  return await mongo.getDocumentsAsync({
    collection: 'company_security_scope',
    criteria: {company_id: companyId}
  })
}

async function getPositionMembers(companyId, positionId) {

  return await mongo.getDocumentsAsync({
    collection: 'company_security_scope',
    criteria: {company_id: companyId, position_id: positionId}
  })
}


async function buildScopesFromPositionData() {

  await mongo

  //* @param {collection, criteria, sort, limit, skip, project} data
  let positions = await mongo.getDocumentsAsync({
    collection: 'position',
    criteria: {company_id: COMPANY_ID}
  })

  let scopes = []

  for (let position of positions) {
    for (let id of position.admins) {
      let scope = {
        _id: helpers.getId(COMPANY_ID),
        company_id: COMPANY_ID,
        role: 'manager',
        member_id: id,
        position_id: position._id
      }
      scopes.push(scope)
    }
    for (let id of position.users) {
      let scope = {
        _id: helpers.getId(COMPANY_ID),
        company_id: COMPANY_ID,
        role: 'member',
        member_id: id,
        position_id: position._id
      }
      scopes.push(scope)
    }
    if (position.teams) {
      for (let id of position.teams.admin) {
        let scope = {
          _id: helpers.getId(COMPANY_ID),
          company_id: COMPANY_ID,
          role: 'manager',
          team_id: id,
          position_id: position._id
        }
        scopes.push(scope)
      }
      for (let id of position.teams.member) {
        let scope = {
          _id: helpers.getId(COMPANY_ID),
          company_id: COMPANY_ID,
          role: 'manager',
          team_id: id,
          position_id: position._id
        }
        scopes.push(scope)
      }
    }
  }

  console.log(scopes)
}

setTimeout(main, 1500);

// main().then(() => {
//   console.log('Done');
// }).catch((e) => {
//   console.error(e);
// });
