'use strict'

const breezyConfig = require('../../../data/config')
require('../../../src/util/breezy-config').initConfig(breezyConfig)
const mongo = require('../../../src/db/mongoClient')()
const helpers = require('../../../src/util/helpers')


const roles = ['manager', 'position_member']

async function main() {

  await mongo

  for (let c = 0; c < 100; c++) {

    console.log('')
    let companyId = helpers.getId()
    let members = []
    let teams = []


    console.log('Creating company', c, companyId)

    let memberCount = 5 + getRandomInt(30)
    console.log('Creating', memberCount, 'members for company', companyId)

    for (let m = 0; m < memberCount; m++) {
      members.push(helpers.getId())
    }

    let teamCount = getRandomInt(10)
    console.log('Creating', teamCount, 'teams for company', companyId)

    for (let m = 0; m < teamCount; m++) {
      teams.push(helpers.getId())
    }

    let positionCount = 50 + getRandomInt(500)
    console.log('Creating', positionCount, 'positions for company', companyId)
    for (let p = 0; p < positionCount; p++) {

      let positionId = helpers.getId(companyId)

      for (let i = 0; i < members.length; i++) {
        if (getRandomInt(2) === 0) {
          let member = addMember(companyId, positionId, members[i])
          await mongo.putDocumentAsync({
            collection: 'company_security_scope',
            doc: member
          })
          // mongo.putDocumentAsync({
          //   collection: 'company_security_scope',
          //   doc: member
          // }).then(() => {
          //   //console.log('wrote member', member.member_id)
          // }).catch((e) => {
          //   console.error(e)
          // })
        }
      }

      for (let i = 0; i < teams.length; i++) {
        if (getRandomInt(2) === 0) {
          let team = addTeam(companyId, positionId, teams[i])
          await mongo.putDocumentAsync({
            collection: 'company_security_scope',
            doc: team
          })
          // mongo.putDocumentAsync({
          //   collection: 'company_security_scope',
          //   doc: team
          // }).then(() => {
          //   //console.log('wrote team', team.team_id)
          // }).catch((e) => {
          //   console.error(e)
          // })
        }
      }
    }
    console.log('done')
  }
}

function addMember(companyId, positionId, userId) {

  return {
    _id: helpers.getId(companyId),
    company_id: companyId,
    role: applyRole(),
    member_id: userId,
    position_id: positionId
  }
}

function addTeam(companyId, positionId, teamId) {

  return {
    _id: helpers.getId(companyId),
    company_id: companyId,
    role: applyRole(),
    team_id: teamId,
    position_id: positionId
  }
}

function applyRole() {
  return roles[getRandomInt(2)]
}

function getRandomInt(max) {
  return Math.floor(Math.random() * Math.floor(max));
}


setTimeout(main, 1500);

// main().then(() => {
//   console.log('Done');
// }).catch((e) => {
//   console.error(e);
// });
