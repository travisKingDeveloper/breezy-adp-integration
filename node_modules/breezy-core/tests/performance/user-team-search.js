'use strict'

const breezyConfig = require('../../data/config')
require('../../src/util/breezy-config').initConfig(breezyConfig)
const helpers = require('../../src/util/helpers')


//performance test for user searching and stuff with things

let roles = [helpers.getId('e16af8b6eb68'),
  helpers.getId('e16af8b6eb68'),
  helpers.getId('e16af8b6eb68'),
  helpers.getId('e16af8b6eb68'),
  helpers.getId('e16af8b6eb68'),
  helpers.getId('e16af8b6eb68'),
  helpers.getId('e16af8b6eb68'),
  helpers.getId('e16af8b6eb68'),
  helpers.getId('e16af8b6eb68'),
  helpers.getId('e16af8b6eb68'),
  helpers.getId('e16af8b6eb68')]


let position = {
  _id: 8675309,
  name: 'perf test',
  users: [],
  usersObj: {},
  teams: {}
}

console.log(roles)

for (let i = 0; i < 100; i++) {

  let user = makeUserRole()

  position.users.push(user)

  position.usersObj[user._id] = user.role_id
}

console.log(position)

let currentUser = position.users[getRandomInt(position.users.length)]

console.log(currentUser)

let time = new Date()

let result

for (let i = 0; i < 10000; i++) {

  result = findUserInArray(currentUser._id, position.users);
}

let duration = new Date() - time

console.log(result, 'found in', duration, 'ms')

time = new Date()

for (let i = 0; i < 10000; i++) {

  result = findUserInObject(currentUser._id, position.usersObj)
}

duration = new Date() - time

console.log(result, 'found in', duration, 'ms')


function findUserInArray(id, users) {
  let indexOfCurrentUser = users.findIndex((u) => u._id === id)
  return users[indexOfCurrentUser]
}

function findUserInObject(id, users) {
  // if (id in users) {
  //   return {
  //     _id: id,
  //     role_id: users[id]
  //   }
  // }
  return {
    _id: id,
    role_id: users[id]
  }
}

function makeUserRole() {

  return {
    _id: helpers.getId('e16af8b6eb68'),
    role_id: roles[getRandomInt(roles.length)]
  }
}


function getRandomInt(max) {
  return Math.floor(Math.random() * Math.floor(max));
}